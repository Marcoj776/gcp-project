{"version":3,"sources":["logo.svg","Header.css.js","Header.js","FeaturedPost.js","App.js","reportWebVitals.js","index.js"],"names":["styles","theme","marco","background","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","useStyles","makeStyles","Header","props","classes","sections","title","Fragment","Toolbar","className","Button","size","Typography","component","variant","color","align","noWrap","IconButton","map","section","Link","href","url","card","display","cardDetails","cardMedia","width","FeaturedPost","post","Grid","item","xs","md","CardActionArea","Card","CardContent","date","paragraph","description","Hidden","xsDown","CardMedia","image","imageTitle","featuredPosts","imageText","App","useTheme","matches","useMediaQuery","breakpoints","up","console","log","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.921a47c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","const styles = (theme) => ({\r\n    marco: {\r\n        background: \"red\"\r\n  },\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: \"space-between\",\r\n    overflowX: \"auto\",\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n  },\r\n});\r\n\r\nexport default styles","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport styles from \"./Header.css.js\"\r\n\r\nconst useStyles = makeStyles(theme => styles(theme));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const { sections, title } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Toolbar className={`${classes.toolbar} ${classes.marco}`}>\r\n        <Button size=\"small\">Subscribe</Button>\r\n        <Typography\r\n          component=\"h2\"\r\n          variant=\"h5\"\r\n          color=\"inherit\"\r\n          align=\"center\"\r\n          noWrap\r\n          className={classes.toolbarTitle}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton>\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <Button variant=\"outlined\" size=\"small\">\r\n          Sign up\r\n        </Button>\r\n      </Toolbar>\r\n      <Toolbar\r\n        component=\"nav\"\r\n        variant=\"dense\"\r\n        className={classes.toolbarSecondary}\r\n      >\r\n        {sections.map((section) => (\r\n          <Link\r\n            color=\"inherit\"\r\n            noWrap\r\n            key={section.title}\r\n            variant=\"body2\"\r\n            href={section.url}\r\n            className={classes.toolbarLink}\r\n          >\r\n            {section.title}\r\n          </Link>\r\n        ))}\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  sections: PropTypes.array,\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: \"flex\",\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n});\r\n\r\nexport default function FeaturedPost(props) {\r\n  const classes = useStyles();\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <CardActionArea component=\"a\" href=\"#\">\r\n        <Card className={classes.card}>\r\n          <div className={classes.cardDetails}>\r\n            <CardContent>\r\n              <Typography component=\"h2\" variant=\"h5\">\r\n                {post.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {post.date}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" paragraph>\r\n                {post.description}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"primary\">\r\n                Continue reading...\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n          <Hidden xsDown>\r\n            <CardMedia\r\n              className={classes.cardMedia}\r\n              image={post.image}\r\n              title={post.imageTitle}\r\n            />\r\n          </Hidden>\r\n        </Card>\r\n      </CardActionArea>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nFeaturedPost.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Header from \"./Header\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FeaturedPost from \"./FeaturedPost\";\n\nconst sections = [\n  { title: \"Technology\", url: \"#\" },\n  { title: \"Design\", url: \"#\" },\n  { title: \"Culture\", url: \"#\" },\n  { title: \"Business\", url: \"#\" },\n  { title: \"Politics\", url: \"#\" },\n  { title: \"Opinion\", url: \"#\" },\n  { title: \"Science\", url: \"#\" },\n  { title: \"Health\", url: \"#\" },\n  { title: \"Style\", url: \"#\" },\n  { title: \"Travel\", url: \"#\" },\n];\n\nconst featuredPosts = [\n  {\n    title: \"Featured post\",\n    date: \"Nov 12\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    image: \"https://source.unsplash.com/random\",\n    imageText: \"Image Text\",\n  },\n  {\n    title: \"Post title\",\n    date: \"Nov 11\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    image: \"https://source.unsplash.com/random\",\n    imageText: \"Image Text\",\n  },\n];\n\nfunction App() {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  console.log(\"palette\", theme.palette)\n  console.log(\"breakpoints\", theme.breakpoints)\n  return (\n    <div className=\"App\">\n      <Header title=\"Blog\" sections={sections} />\n\n      <Grid container spacing={4}>\n        {featuredPosts.map((post) => (\n          <FeaturedPost key={post.title} post={post} />\n        ))}\n      </Grid>\n      <span>{`theme.breakpoints.up('sm') matches: ${matches}`}</span>\n      {console.log(theme)}\n      <div className=\"App\">\n        <Typography>Hi Dad</Typography>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}